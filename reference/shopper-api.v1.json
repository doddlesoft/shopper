{
  "openapi": "3.0.0",
  "info": {
    "title": "Shopper API",
    "version": "1.0",
    "description": "API reference for the Shopper API.",
    "contact": {
      "name": "Sam Bindoff",
      "email": "sam@shopper.test",
      "url": "http://shopper.test/contact"
    },
    "termsOfService": "http://shopper.test/terms"
  },
  "servers": [
    {
      "url": "http://shopper.test/api"
    }
  ],
  "paths": {
    "/items": {
      "get": {
        "summary": "Get Items",
        "responses": {
          "200": {
            "description": "A collection of Items.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "An array of Item objects.",
                      "items": {}
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-items",
        "description": "Get a collection of Items.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page[size]",
            "description": "The amount of results per page."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page[number]",
            "description": "The page number for the results."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "name",
                "meal"
              ]
            },
            "in": "query",
            "name": "sort",
            "description": "The property by which the results should be sorted. Prefix `-` to sort descendingly."
          },
          {
            "schema": {
              "type": "string",
              "example": "list:1"
            },
            "in": "query",
            "name": "filter",
            "description": "The resource type and ID, seperated by a colon, to filter the results by."
          }
        ]
      },
      "post": {
        "summary": "Create Item",
        "operationId": "post-items",
        "responses": {
          "200": {
            "description": "The existing Item based on the name in the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Item"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "The newly created Item.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Item"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create an Item either unrelated or specifically for a List or Meal.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Accept",
            "required": true,
            "description": ""
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the Item."
                  },
                  "list_id": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "The List ID the Item is being created on."
                  },
                  "meal_id": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "The Meal ID the Item is being created on."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {}
            }
          },
          "description": ""
        }
      },
      "parameters": []
    },
    "/items/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The Item ID."
        }
      ],
      "patch": {
        "summary": "Update Item",
        "operationId": "patch-item",
        "responses": {
          "200": {
            "description": "The updated Item.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Item"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update an Item either everywhere or specifically for a List or Meal.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Accept",
            "description": "",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name of the Item."
                  },
                  "list_id": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "The List ID the Item is being updated on."
                  },
                  "meal_id": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "The Meal ID the Item is being updated on."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": ""
        }
      },
      "delete": {
        "summary": "Delete Item",
        "operationId": "delete-item",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete an Item either everywhere or specifically from a List or Meal.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Accept",
            "description": "",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "list_id": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "The List ID the Item is being deleted from."
                  },
                  "meal_id": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "The Meal ID the Item is being deleted from."
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/lists": {
      "get": {
        "summary": "Get Lists",
        "responses": {
          "200": {
            "description": "A collection of Lists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "An array of List objects.",
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-lists",
        "description": "Get a collection of Lists."
      },
      "post": {
        "summary": "Create List",
        "operationId": "post-lists",
        "responses": {
          "201": {
            "description": "The newly created List.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Liste"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a List.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Accept",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the List."
                  },
                  "list_id": {
                    "description": "The List ID the new List should copy.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "only_incomplete": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "When copying a List only include incomplete Items when set to true, otherwise copy all Items."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        }
      }
    },
    "/lists/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The List ID."
        }
      ],
      "get": {
        "summary": "Get List",
        "responses": {
          "200": {
            "description": "The List.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Liste"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-list",
        "description": "Get a single List.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "items",
                "meals"
              ]
            },
            "in": "query",
            "name": "include",
            "description": "The resources related to a List to be included in the result."
          }
        ]
      },
      "patch": {
        "summary": "Update List",
        "operationId": "patch-list",
        "responses": {
          "200": {
            "description": "The updated List.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Liste"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update a List.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name of the List."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Accept",
            "required": true,
            "description": ""
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "Delete List",
        "operationId": "delete-list",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete a List."
      }
    },
    "/meals": {
      "get": {
        "summary": "Get Meals",
        "responses": {
          "200": {
            "description": "A collection of Meals.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "An array of Meal objects.",
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meals",
        "description": "Get a collection of Meals."
      },
      "post": {
        "summary": "Create Meal",
        "operationId": "post-meals",
        "responses": {
          "201": {
            "description": "The newly created Meal.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Meal"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a Meal.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Accept",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the Meal."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        }
      }
    },
    "/meals/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The Meal ID."
        }
      ],
      "get": {
        "summary": "Get Meal",
        "responses": {
          "200": {
            "description": "The Meal object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Meal"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-meal",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "items",
                "lists"
              ]
            },
            "in": "query",
            "name": "include",
            "description": "The resources related to a Meal to be included in the result."
          }
        ],
        "description": "Get a single Meal."
      },
      "patch": {
        "summary": "Update Meal",
        "operationId": "patch-meal",
        "responses": {
          "200": {
            "description": "The updated Meal.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Meal"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Accept",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name of the Meal."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": ""
        },
        "description": "Update a Meal."
      },
      "delete": {
        "summary": "Delete Meal",
        "operationId": "delete-meal",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete a Meal."
      }
    },
    "/completed-items": {
      "post": {
        "summary": "Complete Item on List",
        "operationId": "post-completed-items",
        "responses": {
          "204": {
            "description": "No Content."
          }
        },
        "description": "Set an Item as completed on a List.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item_id": {
                    "type": "integer",
                    "description": "The Item ID you would like to complete."
                  },
                  "list_id": {
                    "description": "The List ID the Item is being completed on.",
                    "type": "integer"
                  }
                },
                "required": [
                  "item_id",
                  "list_id"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Accept",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ]
      }
    },
    "/completed-items/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The completed Item ID."
        }
      ],
      "delete": {
        "summary": "Incomplete Item on List",
        "operationId": "delete-completed-item",
        "responses": {
          "204": {
            "description": "No Content."
          }
        },
        "description": "Set an Item as incompleted on a List.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "list_id": {
                    "type": "integer",
                    "description": "The List ID the Item is being incompleted on."
                  }
                },
                "required": [
                  "list_id"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Accept",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ]
      }
    },
    "/list-meals/{id}": {
      "get": {
        "summary": "Get List Meals",
        "responses": {
          "200": {
            "description": "A collection of Meals related to the List.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "An array of Meal objects.",
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-list-meals",
        "description": "Get a collection of Meals related to the List."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The List ID."
        }
      ],
      "post": {
        "summary": "Create List Meal",
        "operationId": "post-list-meals",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Accept",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "description": "Add a Meal to a List.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "meal_id": {
                    "type": "integer",
                    "description": "The Meal ID being added to the List."
                  }
                },
                "required": [
                  "meal_id"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "",
        "operationId": "delete-list-meals",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete a Meal from a List.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Accept",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "default": "application/json"
            },
            "in": "header",
            "name": "Content-Type",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "meal_id": {
                    "type": "integer",
                    "description": "The Meal ID being deleted from the List."
                  }
                },
                "required": [
                  "meal_id"
                ]
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Item": {
        "title": "Item",
        "type": "object",
        "description": "This object represents an Item owned by a User.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier of the Item."
          },
          "user_id": {
            "type": "integer",
            "description": "The User the Item belongs to."
          },
          "name": {
            "type": "string",
            "description": "The name of the Item."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp the Item was created."
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp the Item was last updated.",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "user_id",
          "name"
        ],
        "x-examples": {
          "basic-example": {
            "id": 1,
            "user_id": 1,
            "name": "Example Item",
            "created_at": "2020-06-01T12:00:00.000000Z",
            "updated_at": "2020-06-01T12:00:00.000000Z"
          }
        }
      },
      "Liste": {
        "title": "Liste",
        "type": "object",
        "description": "This object represents a List owned by a User.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier of the List."
          },
          "user_id": {
            "type": "integer",
            "description": "The User the List belongs to."
          },
          "name": {
            "type": "string",
            "description": "The name of the List."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp the List was created."
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp the List was last updated.",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "user_id",
          "name"
        ],
        "x-examples": {
          "basic-example": {
            "id": 1,
            "user_id": 1,
            "name": "Example List",
            "created_at": "2020-06-01T12:00:00.000000Z",
            "updated_at": "2020-06-01T12:00:00.000000Z"
          }
        }
      },
      "Meal": {
        "title": "Meal",
        "type": "object",
        "description": "This object represents a Meal owned by a User.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier of the Meal."
          },
          "user_id": {
            "type": "integer",
            "description": "The User the Meal belongs to."
          },
          "name": {
            "type": "string",
            "description": "The name of the Meal."
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp the Meal was created.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp the Meal was last updated.",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "user_id",
          "name"
        ],
        "x-examples": {
          "basic-example": {
            "id": 1,
            "user_id": 1,
            "name": "Example Meal",
            "created_at": "2020-06-01T12:00:00.000000Z",
            "updated_at": "2020-06-01T12:00:00.000000Z"
          }
        }
      },
      "User": {
        "title": "User",
        "type": "object",
        "description": "This object represents a User.",
        "x-examples": {
          "basic-example": {
            "id": 1,
            "name": "Miss Example User",
            "email": "example@user.com",
            "email_verified_at": "2020-06-01T12:00:00.000000Z",
            "password": "supersercrethashedpassword",
            "remember_token": "randomtoken",
            "created_at": "2020-06-01T12:00:00.000000Z",
            "updated_at": "2020-06-01T12:00:00.000000Z"
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier of the User."
          },
          "name": {
            "type": "string",
            "description": "The full name of the User."
          },
          "email": {
            "type": "string",
            "description": "The email address of the User."
          },
          "email_verified_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp the User verified their email address."
          },
          "password": {
            "type": "string",
            "description": "The hashed password of the User."
          },
          "remember_token": {
            "type": "string",
            "description": "The random unique remember token of the User."
          },
          "created_at": {
            "type": "string",
            "description": "The timestamp the User was created.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp the User was last updated.",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "password"
        ]
      },
      "PersonalAccessToken": {
        "title": "PersonalAccessToken",
        "type": "object",
        "description": "This object represents a token owned by a tokenable (User) that is used to authenticate.",
        "x-examples": {
          "basic-example": {
            "id": 1,
            "tokenable_type": "App\\User",
            "tokenable_id": 1,
            "name": "Example User Token",
            "token": "supersercrethashedrandomtoken",
            "abilities": "[\"*\"]",
            "last_used_at": "2020-06-01T12:00:00.000000Z",
            "created_at": "2020-06-01T12:00:00.000000Z",
            "updated_at": "2020-06-01T12:00:00.000000Z"
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier of the Token."
          },
          "tokenable_type": {
            "type": "string",
            "description": "The tokenable type (Model) the Token belongs to."
          },
          "tokenable_id": {
            "type": "integer",
            "description": "The tokenable id (Resource ID) the Token belongs to."
          },
          "name": {
            "type": "string",
            "description": "The name of the Token."
          },
          "token": {
            "type": "string",
            "description": "The random hashed unique Token that us used to authenticate."
          },
          "abilities": {
            "type": "string",
            "description": "The abilities the tokenable has using this Token."
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp the Token was last used."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp the Token was created."
          },
          "updated_at": {
            "type": "string",
            "description": "The timestamp the Token was last updated.",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "tokenable_type",
          "tokenable_id",
          "name",
          "token"
        ]
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ]
}